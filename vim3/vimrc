set nocompatible
set encoding=utf-8 " Set default file encoding

filetype off


" Pluggins  --------------------------------------------------------------- {{{
" set the runtime path to include vundle and initialize
set rtp+=~/.vim/bundle3/Vundle.vim

" Vundle plugin list section
" Each time a plugin is added to the list below
" You need to run  :PluginInstall within vim
call vundle#begin()

" let vundle manage vundle, required
Plugin 'vundlevim/vundle.vim'

" Color scheme solarized 
Plugin 'altercation/vim-colors-solarized'

" A nice status bar at the bottom 
Plugin 'bling/vim-airline'

" Buffer explorer
Plugin 'jlanzarotta/bufexplorer'

" NERDTree explorer
Plugin 'preservim/nerdtree'

" Easy comment block/line, ... with gcc  gcgc, ...
Plugin 'tpope/vim-commentary'

call vundle#end()            " required
filetype plugin indent on    " required
" --------------------------------------------------------------------------}}}

" General settings
set backspace=indent,eol,start  " Defines what backspace does in insert mode
set ruler        " Show the line and column number in the status line
set number       " show line number
set showcmd
set showmatch    " Highlight matching parenthesis
set incsearch    " Show the matching tokens when search a pattern
set hlsearch     " Highligh a previous search if any
set scrolloff=20 " Let some space around the cursor to see the context
set tabstop=4    " Number of spaces for a Tab
set shiftwidth=4 " Size of the autoindent

syntax enable

" Color scheme
set background=dark
colorscheme solarized
" If the terminal is not configured with solarized, uncomment the following
" let g:solarized_termcolors=256

" Mappings ---------------------------------------------------------------- {{{
" The leader globally used
let mapleader = ","

" Easily set the working directory to the file
" currently edited
map <leader>cd :cd %:p:h<cr>:pwd<cr>

" Explores the buffer
map <leader>o :BufExplorer<cr>

" Save the current buffer
map <leader>w :w!<cr>

" Window Navigation
"Move to the window below  
nnoremap <C-J> <C-W><C-J>
"Move to the window above
nnoremap <C-K> <C-W><C-K>
"Move to the window on the right
nnoremap <C-L> <C-W><C-L>
"Move to the window on the left
nnoremap <C-H> <C-W><C-H> 

" Navigate back and forth between the buffers
nnoremap <C-W> :bprevious<CR> 
nnoremap <C-X> :bnext<CR> 
" --------------------------------------------------------------------------}}}

" vimrc ------------------------------------------------------------------- {{{
" Sourcing vimrc
nnoremap <leader>sv :source $MYVIMRC<CR>
" --------------------------------------------------------------------------}}}


" Help navigation --------------------------------------------------------- {{{
" jump to links with CR
autocmd FileType help nmap <buffer> <CR> <C-]>
" jump back with BS
autocmd FileType help nmap <buffer> <BS> <C-T>
" skip to next option link
autocmd FileType help nmap <buffer> o /'[a-z]\{2,\}'<CR>:nohls<CR>
" skip to previous option link
autocmd FileType help nmap <buffer> O ?'[a-z]\{2,\}'<CR>:nohls<CR>
" skip to next subject link
autocmd FileType help nmap <buffer> s /\|\S\+\|<CR>l:noh<CR>:nohls<CR>
" skip to previous subject link
autocmd FileType help nmap <buffer> S h?\|\S\+\|<CR>l:noh<CR>:nohls<CR>
" quit
autocmd FileType help nmap <buffer> q :q<CR>
" --------------------------------------------------------------------------}}}


" NERDTree ---------------------------------------------------------------- {{{

" Show on the left
let g:NERDTreeWinPos = "left"
" on startup and the cursor back to the other window
autocmd vimenter * NERDTree | wincmd p

" Show the hidden files (starting with .)
let NERDTreeShowHidden = 1

" Do not display temporary files into NERDTree
let NERDTreeIgnore=['\.o$', '\.pyc', '\~$', '\.swp$']

" Closes VIM if the only remaining window is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" --------------------------------------------------------------------------}}}
